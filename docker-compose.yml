services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      - db

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile.backend
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      DATABASE_URL: ${DATABASE_URL}
      UPLOAD_DIR: /app/uploads
    env_file:
      - .env
    volumes:
      - uploads_data:/app/uploads

  worker-app:
    build:
      context: .
      dockerfile: worker/Dockerfile.worker
    ports:
      - "8002:8002"
    depends_on:
      - db
    environment:
      DATABASE_URL: ${DATABASE_URL}
      UPLOAD_DIR: /app/uploads
    env_file:
      - .env
    volumes:
      - uploads_data:/app/uploads      
      
  #Add this service to your docker-compose.yml
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://backend:8000/api

volumes:
  postgres_data:
  uploads_data: